{"version":3,"sources":["Components/CardMain.jsx","Home.jsx","Components/Theme.jsx","App.js","index.js"],"names":["ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","CardMain","date","Date","toLocaleDateString","useState","city","setCity","search","setSearch","useEffect","getWeatherData","a","fetch","res","json","actualData","main","expanded","setExpanded","Card","className","sx","maxWidth","CardHeader","avatar","Avatar","bgcolor","red","action","title","subheader","type","name","id","val","placeholder","onChange","event","target","value","console","log","CardContent","Typography","variant","color","temp","CardActions","disableSpacing","onClick","Collapse","in","timeout","unmountOnExit","paragraph","temp_min","temp_max","pressure","humidity","Home","Container","Box","Theme","lightMode","setLightMode","style","App","exact","path","component","from","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f77ab0c.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport { red } from '@mui/material/colors';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n    }),\r\n}));\r\nconst CardMain = () => {\r\n\r\n    const date = new Date().toLocaleDateString();\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState('Jaipur');\r\n  \r\n    useEffect(() => {\r\n        const getWeatherData = async () => {\r\n            const Api = 'c7b7049fe72586093e1175b7c4a14d12';\r\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${Api}`);\r\n            const actualData = await res.json();\r\n            // console.log(actualData);\r\n            setCity(actualData.main);\r\n        }\r\n        getWeatherData();\r\n    }, [search]);\r\n\r\n\r\n\r\n\r\n    const InputEvent = (event) => {\r\n        const search = event.target.value;\r\n        console.log(search);\r\n        setSearch(search);\r\n    };\r\n    const [expanded, setExpanded] = useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"mx-auto\" sx={{ maxWidth: 345 }}>\r\n                <CardHeader\r\n                    avatar={\r\n                        <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                            W\r\n                        </Avatar>\r\n                    }\r\n                    action={\r\n                        <IconButton aria-label=\"settings\">\r\n                            <MoreVertIcon />\r\n                        </IconButton>\r\n                    }\r\n                    title=\"Enter City Name\"\r\n                    subheader={date}\r\n                />\r\n                <div className=\"searchbar\" >\r\n                    <input type=\"text\" name=\"search\" id=\"search\" val={search} placeholder=\"City/Place Name\" onChange={InputEvent} />\r\n                </div>\r\n             \r\n                <CardContent>\r\n                    {!city ? (\r\n                        <p>No Data Found</p>\r\n                    ) :\r\n                        (\r\n                            <div className=\"mx-auto text-center\">\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {search}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                    {city.temp}°C\r\n                                </Typography>\r\n                            </div>\r\n                        )}\r\n\r\n                </CardContent>\r\n                <CardActions disableSpacing>\r\n                    <IconButton aria-label=\"add to favorites\">\r\n                        <FavoriteIcon />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"share\">\r\n                        <ShareIcon />\r\n                    </IconButton>\r\n                    <ExpandMore\r\n                        expand={expanded}\r\n                        onClick={handleExpandClick}\r\n                        aria-expanded={expanded}\r\n                        aria-label=\"show more\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </ExpandMore>\r\n                </CardActions>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n\r\n                        {!city ? (\r\n                            <p>No Data Found</p>\r\n                        ) :\r\n                            (\r\n                                <>\r\n                                    <Typography paragraph>Weather Info of {search}:</Typography>\r\n                                    <Typography paragraph>\r\n                                        Min: {city.temp_min}°C | Max: {city.temp_max}\r\n                                    </Typography>\r\n                                    <Typography paragraph>\r\n                                        Pressure: {city.pressure}  &nbsp;  Humidity:{city.humidity}\r\n                                    </Typography>\r\n                                </>\r\n                            )}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardMain;\r\n","import React from 'react';\r\nimport { Box, Container } from '@mui/material/';\r\nimport CardMain from './Components/CardMain';\r\nconst Home = () => {\r\n  \r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n                <Box>\r\n                    <CardMain />\r\n                </Box>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React,{useState} from 'react'\r\nimport Home from '../Home';\r\n\r\nconst Theme = () => {\r\n  const [lightMode, setLightMode] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className={lightMode ? \"light-mode\" : \"dark-mode\"}>\r\n                <div className=\"container\">\r\n                    <span style={{ color: lightMode ? \"yellow\" : \"gray\" }}>☽</span>\r\n                    <div className=\"switch-checkbox\">\r\n                        <label className=\"switch\">\r\n                            <input type=\"checkbox\" onChange={() => setLightMode(!lightMode)} />\r\n                            <span className=\"slider round\"> </span>\r\n                        </label>\r\n                    </div>\r\n                    <span style={{ color: lightMode ? \"gray\" : \"#c96dfd\" }}>☀︎</span>\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"mx-auto text-center m-2\">Live Weather App {lightMode ? \"Light\" : \"Dark\"} Mode </h1>\r\n                        <Home />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Theme;\r\n","import React from 'react'\nimport { Route, Switch,Redirect } from 'react-router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Theme from './Components/Theme';\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path='/weather-app/' component={Theme} />\n        <Redirect from=\"*\" to=\"/weather-app/\" />\n      </Switch>\n\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}